https://www.hackerearth.com/practice/basic-programming/bit-manipulation/basics-of-bit-manipulation/practice-problems/algorithm/and-operation-3-0b1a025c/
/**
 *  Author: AhSaN (JUST-22)
 *  Created: 26-10-2024  09:51:52
**/
#include <bits/stdc++.h>

#pragma GCC optimize("Ofast")
using namespace std;

#ifndef ONLINE_JUDGE
#include "Ash.cpp"
#else
#define dbg(...)
#define dbgA(...)
#endif

void Sol(int Cs) {
  int n, Q;
  cin >> n >> Q;
  vector<int> who[32];
  for (int i = 0; i < n; i++) {
    int x;
    cin >> x;
    for (int j = 0; j < 32; j++) {
      if (x >> j & 1) {
        who[j].push_back(i + 1);
      }
    }
  }
  while (Q--) {
    int l, r, x;
    cin >> l >> r >> x;
    for (int j = 0; j < 32; j++) {
      if (~x >> j & 1) {
        set<int> todel;
        auto &v = who[j];
        auto it = lower_bound(v.begin(), v.end(), l);
        auto it2 = lower_bound(v.begin(), v.end(), r + 1);
        if (it != it2) v.erase(it, it2);
      }
    }
  }
  vector<int> ans(n + 1, 0);
  for (int j = 0; j < 32; j++) {
    for (auto &it : who[j]) {
      ans[it] |= 1 << j;
    }
  }
  for (int i = 1; i <= n; i++) cout << ans[i] << " \n"[i == n];
}

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int Tc = 1;
  // cin >> Tc;
  for (int Cs = 1; Cs <= Tc; Cs++) {
    Sol(Cs);
  }
  return 0;
}
