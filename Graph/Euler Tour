https://cses.fi/problemset/task/1137/

#include <bits/stdc++.h>
 
using namespace std;
 
#ifndef ONLINE_JUDGE
#include "Ash.cpp"
#else
#define dbg(...)
#endif
 
void solve(int cs) {
  int n, q;
  cin >> n >> q;
  vector<int> a(n);
  for (int i = 0; i < n; i++) cin >> a[i];
  vector<vector<int>> g(n);
  for (int i = 1; i < n; i++) {
    int u, v;
    cin >> u >> v;
    --u, --v;
    g[u].push_back(v);
    g[v].push_back(u);
  }
  vector<int> start(n), end(n), eular;
  auto dfs = [&](auto &&self, int node, int pr) -> void {
    start[node] = eular.size();
    eular.push_back(node);
    for (auto &son : g[node]) {
      if (son ^ pr) {
        self(self, son, node);
      }
    }
    end[node] = eular.size() - 1;
  };
  dfs(dfs, 0, -1);
  int64_t Fen[n + 1] {};
  auto add = [&](int i, int x) -> void {
    for (++i; i <= n; i += i & -i) {
      Fen[i] += x;
    }
  };
  auto sum = [&](int i) -> int64_t {
    int64_t res = 0;
    for (++i; i > 0; i -= i & -i) {
      res += Fen[i];
    }
    return res;
  };
  for (int i = 0; i < n; i++) {
    add(i, a[eular[i]]);
  }
  while (q--) {
    int t; cin >> t;
    if (t == 1) {
      int p, x; cin >> p >> x;
      --p;
      add(start[p], x - a[p]);
      a[p] = x;
    } else {
      int p; cin >> p;
      --p;
      cout << sum(end[p]) - sum(start[p] - 1) << "\n";
    }
  }
}
 
int32_t main() {
  ios::sync_with_stdio(!cin.tie(0));
  int t = 1;
  // cin >> t;
  for (int i = 1; i <= t; ++i) {
    solve(i);
  }
  return 0;
}
