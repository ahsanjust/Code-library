template <typename T> class Mint {
public:
  Mint(T mod) : mod(mod) {}

  T add(T a, T b) const { return (a + b) % mod; }
  T sub(T a, T b) const { return (a - b + mod) % mod; }
  T mul(T a, T b) const { return (a * b) % mod; }

  T power(T base, T exp) const {
    T res = 1;
    base = base % mod;
    while (exp > 0) {
      if (exp % 2 == 1)
        res = (res * base) % mod;
      exp = exp >> 1;
      base = (base * base) % mod;
    }
    return res;
  }

  T inverse(T a) const {
    T u = 0, v = 1;
    T m = mod;
    while (a != 0) {
      T t = m / a;
      m -= t * a;
      swap(a, m);
      u -= t * v;
      swap(u, v);
    }
    assert(m == 1);
    if (u < 0)
      u += mod;
    return u;
  }

  T div(T a, T b) const { return mul(a, inverse(b)); }

private:
  T mod;
};
