https://codeforces.com/contest/1418/problem/G

#include <bits/stdc++.h>

using namespace std;

#ifndef ONLINE_JUDGE
#include "trace.cpp"
#else
#define dbg(...)
#endif

mt19937_64 rnd((unsigned int)chrono::steady_clock::now().time_since_epoch().count());
int64_t R(int64_t l, int64_t r) { return (l + (rnd() % (r - l + 1))); }

int32_t main() {
  cin.tie(0) -> sync_with_stdio(0);
  int n;
  cin >> n;
  vector<int> a(n + 1);
  for (int i = 1; i <= n; i++) cin >> a[i];
  vector<pair<uint64_t, uint64_t>> h(n + 1);
  for (int i = 1; i <= n; i++) {
    h[i].first = R(1, 1LL << 60);
    h[i].second = R(1, 1LL << 60);
  }
  vector<uint64_t> pref(n + 1, 0);
  map<uint64_t, int> cnt;
  for (int i = 1; i <= n; i++) {
    int c = ++cnt[a[i]];
    if (c % 3 == 1) pref[i] = h[a[i]].first;
    if (c % 3 == 2) pref[i] = h[a[i]].second;
    if (c % 3 == 0) pref[i] = h[a[i]].first ^ h[a[i]].second;
    pref[i] ^= pref[i - 1];
  }
  cnt.clear();
  auto add = [&](uint64_t x) -> void {
    cnt[pref[x]] += 1;
  };

  auto remove = [&](uint64_t x) -> void {
    --cnt[pref[x]];
    if (cnt[pref[x]] == 0) {
      cnt.erase(pref[x]);
    }
  };

  int64_t ans = 0;
  int l = 0;
  add(0);
  vector<vector<int>> pos(n + 1);
  for (int r = 1; r <= n; r++) {
    pos[a[r]].push_back(r);
    if (pos[a[r]].size() > 3) {
      int left = pos[a[r]][pos[a[r]].size() - 4];
      while (l < left) {
        remove(l);
        l += 1;
      }
    }
    ans += cnt[pref[r]];
    add(r);
  }
  cout << ans;
  return 0;
}
