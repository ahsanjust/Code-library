https://judge.yosupo.jp/problem/scc

/**
 *  Author: AhSaN (JUST-22)
 *  Created: 30-08-2024  15:16:11
**/
#include <bits/stdc++.h>

#pragma GCC optimize("Ofast")
using namespace std;

#ifndef ONLINE_JUDGE
#include "Ash.cpp"
#else
#define dbg(...)
#define dbgA(...)
#endif

void Sol(int Cs) {
  int n, m;
  cin >> n >> m;
  vector<vector<int>> g(n), rg(n);
  for (int i = 0, u, v; i < m; i++) {
    cin >> u >> v;
    g[u].push_back(v);
    rg[v].push_back(u);
  }
  
  stack<int> order;
  vector<int> vis(n, false);
  auto dfs = [&](auto &&self, int node) -> void {
    vis[node] = true;
    for (auto &son : g[node]) {
      if (!vis[son]) {
        self(self, son);
      }
    }
    order.push(node);
  };

  for (int i = 0; i < n; i++) if (!vis[i]) dfs(dfs, i);

  vis.assign(n, false);
  vector<int> id(n, -1);
  vector<vector<int>> SSC;
  auto dfs2 = [&](auto &&self, int node, int ssc) -> void {
    vis[node] = true;
    id[node] = ssc;
    SSC[ssc].push_back(node);
    for (auto &son : rg[node]) {
      if (!vis[son]) {
        self(self, son, ssc);
      }
    }
  };

  for (int ssc = 0; !order.empty(); order.pop()) {
    if (!vis[order.top()]) {
      SSC.push_back({});
      dfs2(dfs2, order.top(), ssc), ++ssc;
    }
  }
  int ssc = SSC.size();
  vector<unordered_set<int>> G(ssc);
  for (int i = 0; i < n; i++) {
    for (auto &son : g[i]) {
      if (id[son] != id[i]) {
        G[id[i]].insert(id[son]);
      }
    }
  }
  vector<int> ins(ssc, 0);
  for (int i = 0; i < ssc; i++) {
    for (auto &son : G[i]) {
      ins[son] += 1;
    }
  }
  queue<int> Q;
  for (int i = 0; i < ssc; i++) if (ins[i] == 0) Q.emplace(i);
  vector<int> topo;
  while (Q.size()) {
    int node = Q.front(); Q.pop();
    topo.push_back(node);
    for (auto &son : G[node]) {
      if (!--ins[son]) Q.emplace(son);
    }
  }
  cout << SSC.size() << "\n";
  for (auto &who : topo) {
    cout << SSC[who].size();
    for (auto &x : SSC[who]) cout << " " << x; cout << "\n";
  }
}

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  int Tc = 1;
  // cin >> Tc;
  for (int Cs = 1; Cs <= Tc; Cs++) {
    Sol(Cs);
  }
  return 0;
}
