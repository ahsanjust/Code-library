// when md is small but, n and r is huge!

const int md = 2;
int fact[md], inv[md];

int power(int a, int b) {
  int res = 1;
  for (; b; b >>= 1, a = 1LL * a * a % md) {
    if (b & 1) res = 1LL * res * a % md;
  }
  return res;
}

void init() {
  fact[0] = inv[0] = 1;
  for (int i = 1; i < md; i++) fact[i] = 1LL * fact[i - 1] * i % md;
  inv[md - 1] = power(fact[md - 1], md - 2);
  for (int i = md - 2; i >= 1; --i) inv[i] = 1LL * inv[i + 1] * (i + 1) % md;
}

int C(int n, int r) {
  if (r > n) return 0;
  return 1LL * fact[n] * inv[r] % md * inv[n - r] % md;
}

int lucas(int n, int r) {
  if (r == 0) return 1;
  return 1LL * lucas(n / md, r / md) * C(n % md, r % md) % md;
}

