https://practice.geeksforgeeks.org/contest/job-a-thon-39-hiring-challenge/problems

//iterative
int64_t dp[105][105][105];
int mod = 1e9 + 7;
void Z(int64_t &x) {x %= mod, x += mod, x %= mod;}
int numWays(int n, int k, int m) {
  memset(dp, 0, sizeof(dp));
  dp[0][0][0] = 1;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j <= k; ++j) {
      for (int rem = 0; rem < m; ++rem) {
        dp[i + 1][j][rem] += dp[i][j][rem];
        dp[i + 1][j + 1][(rem + i) % m] += dp[i][j][rem];
        Z(dp[i + 1][j][rem]), Z(dp[i + 1][j + 1][(rem + i) % m]);
      }
    }
  }
  return dp[n][k][0];
}

//recursive
const static int N = 105;
int dp[N][N][N], M, mod = 1000 * 1000 * 1000 + 7;
void Z(int64_t &x) { x %= mod, x += mod, x %= mod; }
int magic(int n, int k, int rem) {
  if (n < 0 || k < 0) return k == 0 && rem == 0;
  if (dp[n][k][rem] != -1) return dp[n][k][rem];
  int64_t ret = magic(n - 1, k, rem); Z(ret);
  ret += magic(n - 1, k - 1, (rem + n) % M); Z(ret);
  return dp[n][k][rem] = ret;
}
int numWays(int n, int k, int m) {
  memset(dp, -1, sizeof(dp));
  M = m;
  return magic(n - 1, k, 0);
}
